Add check when initializing to see if host/path is valid and returns 200:
	require 'open-uri'
	require 'net/http'
	def remote_file_exists?(url)
	  begin
	    url = URI.parse(url)
	    Net::HTTP.start(url.host, url.port) do |http|
	      return http.head(url.request_uri).code == "200"
	    end
	  rescue
	    return false
	  end
	end
	puts remote_file_exists?("http://localhost:7676")

################################################################################

find a way to re-use connection drivers for executing core-admin commands
	solr = RSolr.connect :url => 'http://localhost:8983/solr', :core => 'production'
	solr = RSolr.connect :url => 'http://localhost:8983/solr', :default_core => 'production' <- default?
	solr.select, :q => 'blah' <- goes to select handler in production core
	solr.request 'test/select', :q= > 'blicker' <- goes select handler in test core
	solr.request 'admin/cores', :action => "STATUS"

tag all previous releases

Tests for binary data
	- known issue with Builder encoding; too much encoding?
	Problem with POST/xml encoding -- example, some binary MARC data has been garbled -- TEST

Look at http://lab.cisti-icist.nrc-cnrc.gc.ca/cistilabswiki/index.php/LuSql

  db_mapper = RSolr::DBMapper.new(:host=>'', :database=>'')

Check out http://github.com/dan-manges/mixology/tree/master for extensions/mixins framework?

Check out the following:

http://wiki.apache.org/solr-data/attachments/solr(2d)ruby(2f)BrainStorming/attachments/rich.rb%200.1.3%20-%20Support%20for%20Rich%20Documents
http://wiki.apache.org/solr/solr-ruby/BrainStorming
http://wiki.apache.org/solr/solr-ruby/ToDo

RSolr v 1.0 to-do's
	RequestError
		parse non-200 http body for more meaningful error messages
		include http context within exception object
		initialize accepts http/direct context and optional message
			direct probably has clean errors
			http would need to be parsed